:root {
    --Hufflepuff: #efbc2f;
    --Ravenclaw: #3c4e91;
    --Slytherin: #366447;
    --gryfindorcolor: #a6332e;
}

main {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));
    text-align: center;
}

/*----------- FORM STYLING --------------*/
 
.wf1 {
    align-items: center;
    display: flex;
    flex-direction: column;
    padding-bottom: 5%;
    margin-bottom: 5%;
    font-weight: bold;
}
 
.wf1 fieldset {
    border: 10px solid;
    border-image: linear-gradient(to top, var(--gryfindorcolor), var(--Slytherin)) 90;
    border-radius: 6px;
    margin: 2rem 0;
    padding: 2rem;
    text-align: center;
}

.wf1 label,
.wf1 div {
    display: block;
    font-size: large;
    padding-top: 1rem;
    
}

.wf1 legend {
    font-size: xx-large;
    padding: 0 .5rem;
    
}

.wf1 input[type="text"],
.wf1 input[type="tel"],
.wf1 input[type="email"],
.wf1 input[type="date"],
.wf1 input[type="country"],
.wf1 select,
.wf1 input[type="submit"], textarea {
    appearance: none;
    background-color: wheat;
    border: solid 1px gray;
    border-radius: 25px;
    color: rgb(71, 69, 69);
    margin: 0 auto;
    max-width: 400px;
    padding: .75rem;
    width: 90%;
    font-weight: bold;
}


.wf1 input[type="submit"]{
    display: inline-block;
    line-height: 1;
    transition: all .3s;
    background-color: rgb(189, 85, 85);
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-top: -10px;
    color: #FFFFFF;
    font-size: large;
    text-transform: uppercase;
  }
.wf1 input[type="submit"]:hover {
    background-color: #3D93AA;
    color: #FFFFFF;
}

.wf1 input[type="text"]:invalid, 
.wf1 input[type="tel"]:invalid, 
.wf1 input[type="email"]:invalid {
	border: 2px solid red;
}
.wf1 input[type="text"]:valid, 
.wf1 input[type="tel"]:valid, 
.wf1 input[type="email"]:valid {
	border: 3px solid green;
}
/*
pattern="[0-9]+([ -]?[0-9]+)""
*/

  
/*----------- FORM STYLING --------------*/



 /*-------------Image from vehicles-----------*/
 #vehicle-info {
    display: flex;
    flex-direction: column;
    align-items: center; /* Centra los elementos horizontalmente */
    text-align: center; /* Centra el texto horizontalmente */
    background-color: #f0df99;
    margin-top: 10%;
    border-radius: 15px;
    padding-bottom: 5%;
    margin-bottom: 5%;
    margin-left: 10%;
    margin-right: 10%;
    
}

#vehicle-info img {
    width: 40%;
    margin-top: 20px; /* Espacio entre la imagen y el primer párrafo */
}

#vehicle-info p {
    margin-top: 20px; /* Espacio entre los párrafos */
}

#vehicle-info .parrafos {
    display: flex; /* Crea un contenedor flex para los párrafos */
    justify-content: space-around; /* Distribuye los párrafos uniformemente */
    align-items: center;
    font-size: larger;
    font-weight: bold;
}
#vehicle-info .parrafos p{
    font-size: xx-large;

}


#vehicle-info .parrafos p {
    width: calc(50% - 20px); /* Establece el ancho de los párrafos al 50% del contenedor menos el espacio entre ellos */
}
 /*-------------Image from vehicles-----------*/


 #rental-contract {
    background-size: cover;
    padding: 20px;
    border: 2px solid #8B4513; /* Brown border color */
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Shadow effect */
    max-width: 600px;
    margin: 0 auto;
    font-family: 'Old Standard TT', serif; /* Use an appropriate font for a parchment look */
    color: #8B4513; /* Brown text color */
}

#rental-contract h2 {
    text-align: center;
    font-size: 24px;
    margin-bottom: 20px;
    text-decoration: underline;
}

#rental-contract p {
    margin-bottom: 10px;
}

#rental-contract ol {
    padding-left: 20px;
    list-style-type: decimal;
}

#rental-contract li {
    margin-bottom: 10px;
}


/*
const url = 'https://raw.githubusercontent.com/Dart1516/Rental-Scoots-Site/main/data/maxrentalpricing.json';

async function getData(url) {
    try {
        const response = await fetch(url);
        return await response.json(); 
    } catch (error) {
        console.error('Error fetching JSON:', error); 
    }
}

// for doing the first vehicle appear
document.addEventListener("DOMContentLoaded", async function() {    
    // Select the first vehicle option by default
    const firstVehicleOption = document.querySelector('#vehicle-description option:nth-child(2)');
    firstVehicleOption.selected = true;
    
    // Dispatch a 'change' event to display information of the default selected vehicle
    const changeEvent = new Event('change');
    document.getElementById('vehicle-description').dispatchEvent(changeEvent);
});

// Event listener for the 'change' event of the vehicle description dropdown
document.getElementById('vehicle-description').addEventListener('change', async function() {
    // Get the selected vehicle ID
    const selectedVehicleId = this.value;
    if (selectedVehicleId) {
        const data = await getData(url);
        const selectedVehicle = data.rentalType[selectedVehicleId];
        if (selectedVehicle) {
            // Extract color key
            const colorKey = Object.keys(selectedVehicle.color)[0];
            const currentPrice= selectedVehicle.reservationPrice.halfDay
            // Display vehicle information
            const vehicleInfo = document.getElementById('vehicle-info');
            vehicleInfo.innerHTML = `
                <img src="${selectedVehicle.color[colorKey].imageURL}" alt="${selectedVehicleId}">
                <p>Description: ${selectedVehicle.description}</p>
                <div class="parrafos">
                <h4>Max Persons:</h4>
                <p>${selectedVehicle.maxPersons}</p>
                <h4 id="reservationPrice">Reservation Price: </h4>
                <p>$${currentPrice}</p>
                <div/>
            `;
            // Event listener for reservation type selection
            document.querySelectorAll('input[name="reservation"]').forEach((radio) => {
                radio.addEventListener('change', () => {
                    // Update reservation price based on selected reservation type
                    if (radio.value === 'halfDay') {
                        currentPrice = `$${selectedVehicle.reservationPrice.halfDay}`;
                    } else {
                        currentPrice = `$${selectedVehicle.reservationPrice.fullDay}`;
                    }
                });
            });
            // Event listener for quantity of days selection
            document.getElementById('quantityDays').addEventListener('change', () => {
                const quantityDays = document.getElementById('quantityDays').value;
                const reservationType = document.querySelector('input[name="reservation"]:checked').value;                if (quantityDays && reservationType) {
                    // Calculate total price based on reservation type and quantity of days
                    const reservationPrice = reservationType === 'halfDay' ? selectedVehicle.reservationPrice.halfDay : selectedVehicle.reservationPrice.fullDay;
                    const totalPrice = reservationPrice * parseInt(quantityDays);
                    currentPrice = `$${totalPrice}`;
                }
            });
        } else {
            console.error('Vehicle data not found.');
        }
    }
});

*/